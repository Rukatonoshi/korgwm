[+]  Поддержка одного, двух и трех экранов. Если х11 представляет их как один общий виртуальный экран (это лучше всего для широких окон) -- умение выделять в нем три группы тэгов в зависимости от текущего положения мыши
[+]  Поддержка определения экранов с помощью расширения RandR
[+]  Поддержка 10 тэгов на каждом физическом экране (win+1..0 для переключения)
[+]  Реализовать переключение тэгов
[ ]  Добавить поддержку переключения языков
[ ]  Добавить хоткеи для переключения тэгов
[+]  Умение выбирать предыдущий тэг при переключении на этот же
[ ]  Функция максимизации окна на конкретном тэге конкретного физ. экрана (нажимаешь win+m, у окошка исчезает frame, на заданном тэге исчезает панелька, окно реконфигурируется под размер экрана)
[ ]  Если экран один и окно одно, то не нужно показывать рамку
[ ]  Умение перемещать окно на конкретный экран или на конкретный тэг (win+shift+1..0, win+shift+f1..f3)

[ ]  Навигация по тэгам с помощью vim-like хоткеев (hjkl в рамках физ. экрана)

[ ]  Умение задать курсор, чтобы не было стандартного х11 крестика
[+]  Фокус следует за курсором
[+]  Умение перекидывать курсор на заданный экран по хоткею
[ ]  Добавить хоткеи для переключения экранов

[ ]  Поддержка запуска приложений на заданном тэге -- чтобы почтовик сам летел куда нужно

[+]  Поддержка window urgency
[ ]  Добавить обработчик события

[+]  Нужна панелька, на которой будет время, статус wifi, индикатор языка, заголовок текущего окна (по центру), список тэгов с окнами, на которых подсвечены urgent (слева)
[ ]  Подумать про отображение статуса wifi и языка, мб трей?
[+]  Поддержка xft на панельке, чтобы шрифты были хорошими


[+]  Умение какое-то окошко делать floating по хоткею
[ ]  Умение изменять размеры окошек/тайлов хотя бы если их 2 <= N <= 4
[ ]  Умение изменять размеры и положение floating окошек с помощью мышки
[?]  Умение какое-то окошко показывать на всех экранах (!!! пока не понятно, возможно ли это, мб нет)


[ ]  Умение запускать приложения по хоткеям
[ ]  Поддержка конфиг файла, в котором можно будет настраивать хоткеи и команды, которые их запускают; а также коды цветов


[ ]  Прочитать документацию на возможные ивенты
[ ]  Посмотреть, можно ли в Gtk Pango указать два шрифта
[+]  Понять, что происходит при reparenting
[+]  Продумать алгоритм тайлинга


windows => {
    wid => {
        id => wid,                  # ID of the window
        on_tags => {},              # hash of tags on which this window is shown
        floating => Bool,           # flag if window is floating
        siblings => {},             # hash keys = transient_for windows, values
        transient_for => Int,       # wid of transient_for window, or undef
        (x, y, w, h),               # geometry of window requested in configure (or set to some defaults); used only for floating windows
    },
}

screens => {
    0 => {
        tags => {
            1 => {
                max_window => xid,  # if defined, hide panel and maximize window
                windows_tiled => [],# list (performance bye-bye) of windows attached to this tag, also affects Panel tag visibility
                windows_float => [],# list of floating windows on the tag
                layout => Ref,      # reference to Layout object, or undef (when there is no tiled windows on tag)
            },
        },
        always_on => [],            # list of windows to show on each tag on the screen, should be float
        prev_tag => Int,            # id of previous tag on this screen for switch rotation
        (x, y, w, h),               # basically, for pointer warp and xsetroot
        focus => Int,               # wid of focused window, or undef; copied to %focus when switching to the screen
    },
}

focus => {
    screen => ScreenId,             # id of focused screen
    focus => Int,                   # wid of focused windows
}
